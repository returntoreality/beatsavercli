/*
 * BeatSaver API
 *
 * WIP  If you want to keep any kind of mirror instead of making 100s of requests instead consider subscribing to the websocket api. wss://ws.beatsaver.com/maps  Messages will be in the style {\"type\": \"MAP_UPDATE\", \"msg\": __MAP_DATA_HERE__}
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MapDetailMetadata {
    #[serde(rename = "bpm", skip_serializing_if = "Option::is_none")]
    pub bpm: Option<serde_json::Value>,
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<i32>,
    #[serde(rename = "levelAuthorName", skip_serializing_if = "Option::is_none")]
    pub level_author_name: Option<String>,
    #[serde(rename = "songAuthorName", skip_serializing_if = "Option::is_none")]
    pub song_author_name: Option<String>,
    #[serde(rename = "songName", skip_serializing_if = "Option::is_none")]
    pub song_name: Option<String>,
    #[serde(rename = "songSubName", skip_serializing_if = "Option::is_none")]
    pub song_sub_name: Option<String>,
}

impl MapDetailMetadata {
    pub fn new() -> MapDetailMetadata {
        MapDetailMetadata {
            bpm: None,
            duration: None,
            level_author_name: None,
            song_author_name: None,
            song_name: None,
            song_sub_name: None,
        }
    }
}


