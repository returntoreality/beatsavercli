/*
 * BeatSaver API
 *
 * WIP  If you want to keep any kind of mirror instead of making 100s of requests instead consider subscribing to the websocket api. wss://ws.beatsaver.com/maps  Messages will be in the style {\"type\": \"MAP_UPDATE\", \"msg\": __MAP_DATA_HERE__}
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MapStats {
    #[serde(rename = "downloads", skip_serializing_if = "Option::is_none")]
    pub downloads: Option<i32>,
    #[serde(rename = "downvotes", skip_serializing_if = "Option::is_none")]
    pub downvotes: Option<i32>,
    #[serde(rename = "plays", skip_serializing_if = "Option::is_none")]
    pub plays: Option<i32>,
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<serde_json::Value>,
    #[serde(rename = "upvotes", skip_serializing_if = "Option::is_none")]
    pub upvotes: Option<i32>,
}

impl MapStats {
    pub fn new() -> MapStats {
        MapStats {
            downloads: None,
            downvotes: None,
            plays: None,
            score: None,
            upvotes: None,
        }
    }
}


