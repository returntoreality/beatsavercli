/*
 * BeatSaver API
 *
 * WIP  If you want to keep any kind of mirror instead of making 100s of requests instead consider subscribing to the websocket api. wss://ws.beatsaver.com/maps  Messages will be in the style {\"type\": \"MAP_UPDATE\", \"msg\": __MAP_DATA_HERE__}
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MapTestplay {
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<Box<crate::models::Instant>>,
    #[serde(rename = "feedback", skip_serializing_if = "Option::is_none")]
    pub feedback: Option<String>,
    #[serde(rename = "feedbackAt", skip_serializing_if = "Option::is_none")]
    pub feedback_at: Option<Box<crate::models::Instant>>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::UserDetail>>,
    #[serde(rename = "video", skip_serializing_if = "Option::is_none")]
    pub video: Option<String>,
}

impl MapTestplay {
    pub fn new() -> MapTestplay {
        MapTestplay {
            created_at: None,
            feedback: None,
            feedback_at: None,
            user: None,
            video: None,
        }
    }
}


